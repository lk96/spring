<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 目标类 -->
	<bean id="userDao" class="com.inspur.dao.UserDaoImpl"></bean>
	<!-- 切面类 -->
	<bean id="myAspect" class="com.inspur.aspectxml.MyAspect"></bean>
	<!-- aop编程 -->
	<aop:config>
		<!-- 配置切面 -->
		<aop:aspect ref="myAspect">
			<!-- 配置切入点，通知最后增强那些方法 -->
			<aop:pointcut expression="execution(* com.inspur.dao.*.*(..))"
				id="myPointcut" />
			<!-- 关联通知Advice和切入点Pointcut -->
			<!-- 前置通知 -->
			<aop:before method="myBefore" pointcut-ref="myPointcut" />
			<!-- 后置通知 在方法返回之后执行，就可以获得返回值 
				returning 属性：用于设置后置通知的第二个参数的名称，类型object
			-->
			<aop:after-returning method="myAfterReturning"
				pointcut-ref="myPointcut" returning="returnval" />
<!-- 				环绕通知 -->
			<aop:around method="myArround"
				pointcut-ref="myPointcut" />
<!-- 				抛出通知：用于处理程序发生异常 -->
<!-- 				如果程序没有异常，将不会执行增强 -->
<!-- 				throwing属性，用于设置第二个参数的名称，类型Throwable -->
			<aop:after-throwing method="myAfterThrowing"
				pointcut-ref="myPointcut" throwing="e" />
				
<!-- 				最终通知无论程序发生任何事情，都将执行 -->
			<aop:after method="myAfter"
				pointcut-ref="myPointcut" />


		</aop:aspect>


	</aop:config>

</beans>